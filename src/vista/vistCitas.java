
package vista;

import dao.DAOCitas;
import dao.DAOClinicas;
import java.sql.Date;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import uml.Citas;
import uml.Clinicas;


/**
 * Nombre de la Clase:  VistaCitas
 * Fecha: 04/06/2021
 * Version: 1.0
 *  @author Rene Gabriel Hernandez      Carnet: (203020)

 */
public class vistCitas extends javax.swing.JFrame {
    String []columnas={"CODIGO","NOMBRES","APELLIDOS",/*"GENERO","EDAD",*/"FECHA","HORA","EVENTOS"}; 
       String []columnas2={"CODIGO","EVENTOS"};
            DefaultTableModel modelo=new DefaultTableModel(columnas, 0){
            @Override
                public boolean isCellEditable(int filas, int columnas)
                {
                    if (columnas==6)
                    {
                        return true;
                    }else
                    {
                        return false;
                    }

                }
            };
            
         DefaultTableModel modelo2=new DefaultTableModel(columnas2, 0){
             @Override
            public boolean isCellEditable(int filas, int columnas)
            {
                if (columnas==3)
                {
                    return true;
                }else
                {
                    return false;
                }

            }
         
         };
    
    DAOCitas dao= new  DAOCitas();
         DAOClinicas dao2= new DAOClinicas();
    
      List<Citas> data= new ArrayList<>();
         List<Clinicas> data2= new ArrayList<>();
     
    Citas citas= new Citas();
        Clinicas clinic= new Clinicas();
    
    
    /**
     * Creates new form vistCitas
     */
   
   //METODO PARA CARGAR EN JTABLE LAS CONSULTAS GUARDADAS
    public void cargarTabla ()
    {  tablaDatos.getTableHeader().setReorderingAllowed(false); //Para evitar que se puedan mover las columnas del JTable
        this.modelo.setRowCount(0);
        data.clear();
        data= (List<Citas>) dao.seleccionar();
        Object[]  obj = new Object[6];
        for (Citas fila : data)            
        {
            obj[0]=fila.getCodigo();
            obj[1]=fila.getNombresPaciente();
            obj[2]=fila.getApellidosPaciente();            
            /*obj[3]=fila.getGenero();  
            obj[4]=fila.getEdad(); */
            obj[3]=fila.getFechCita(); 
            obj[4]=fila.getHoraCita();            
            obj[5]=fila.getIdClinica().getIdClinica();  
           
           
           //cargar comboboxClinicas
            this.modelo.addRow(obj);    
        }          
        
        this.tablaDatos.setModel(modelo);
    }//FIN DE METODO PARA CARGAR EN JTABLE LAS CONSULTAS GUARDADAS
    
     //METODO PARA CARGAR LAS CLINICAS DISPONIBLES 
    public void cargarTablaClinicas ()
    {        
        tableClinicas.getTableHeader().setReorderingAllowed(false); //Para evitar que se puedan mover las columnas del JTable
        this.modelo2.setRowCount(0);
        data2.clear();
        data2= (List<Clinicas>) dao2.seleccionar();
        Object[]  obj = new Object[6];
        for (Clinicas fila : data2)            
        {
            obj[0]=fila.getIdClinica();
            obj[1]=fila.getNombClinica();
                    
            this.modelo2.addRow(obj);
            
        }
        
        
        this.tableClinicas.setModel(modelo2);
    }//FIN DE METODO PARA CARGAR LAS CLINIAS DISPONIBLES
    
    //METODO PARA LIMPIAR LOS CAMPOS
    public void limpiar(){
        this.txtCodigo.setText("");
        this.txtNombres.setText("");
        this.txtApellidos1.setText("");
        /*this.rbF.setSelected(false);                     
        this.rbM.setSelected(false);  
        this.txtEdad.setText("");*/
        this.cmbHora.setSelectedIndex(0);
        this.txtClinica.setText("");
    }//FIN DE METODO PARA LIMPIAR LOS CAMPOS
    
    
    
    
    
    public vistCitas() {
        initComponents();
        setLocationRelativeTo(null);
        cargarTabla();
        cargarTablaClinicas();
        
      
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtClinica = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbHora = new javax.swing.JComboBox<>();
        dateFecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtApellidos1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableClinicas = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CITAS");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("CITAS");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Evento");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Nombres");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Apellidos");

        txtCodigo.setEnabled(false);

        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });

        txtClinica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClinicaActionPerformed(evt);
            }
        });
        txtClinica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClinicaKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Codigo de cita");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Fecha Cita");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Hora Cita");

        cmbHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "8:30", "9:00", "9:30", "10:00", "10:30", "11:00", "11:30", "12:00", "13:00", "13:30", "14:00", "14:30", "15:00" }));
        cmbHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHoraActionPerformed(evt);
            }
        });

        tablaDatos.setBackground(new java.awt.Color(109, 175, 188));
        tablaDatos.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tablaDatos.setForeground(new java.awt.Color(255, 255, 255));
        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDatos);

        btnGuardar.setBackground(new java.awt.Color(45, 61, 255));
        btnGuardar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(45, 52, 255));
        btnModificar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(69, 58, 255));
        btnEliminar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(51, 75, 235));
        btnLimpiar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });

        txtApellidos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidos1ActionPerformed(evt);
            }
        });

        tableClinicas.setBackground(new java.awt.Color(153, 215, 224));
        tableClinicas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tableClinicas.setForeground(new java.awt.Color(255, 255, 255));
        tableClinicas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableClinicas);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("<html><body>*Debe ingresar el codigo <br> de la clinica  que desea agendar  </body></html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addGap(70, 70, 70)
                                                        .addComponent(jLabel3))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(69, 69, 69)
                                                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(43, 43, 43)
                                                        .addComponent(txtApellidos1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(69, 69, 69)
                                                        .addComponent(jLabel4))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(127, 127, 127)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cmbHora, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel12)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(206, 206, 206)
                                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(398, 398, 398)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(391, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellidos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addComponent(jLabel11)
                                .addGap(4, 4, 4)
                                .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        // TODO add your handling code here:
        
        if(txtNombres.getText().equals("")||txtApellidos1.getText().equals("")/*||txtEdad.getText().equals("")*/||txtClinica.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Verifica los campos");
        }else{        
        this.citas.setNombresPaciente(this.txtNombres.getText()); 
        this.citas.setApellidosPaciente(this.txtApellidos1.getText()); 
        
        /*char genero=0;
        if (this.rbF.isSelected())
        {
            genero='F';
        }else if (this.rbM.isSelected())
        {
            genero='M';
        }
        this.citas.setGenero(genero);
        this.citas.setEdad(Integer.parseInt(this.txtEdad.getText()));*/
        Date fecNac= new java.sql.Date(dateFecha.getDate().getTime());
        
        this.citas.setFechCita(fecNac);
        
        this.citas.setHoraCita(this.cmbHora.getSelectedItem().toString()); 
        this.citas.setIdClinica(new Clinicas(Integer.parseInt(this.txtClinica.getText())));
        //this.citas.setIdClinica(Integer.parseInt(this.txtClinica.getText()));        

        
       if (dao.insertar(this.citas)){
            JOptionPane.showMessageDialog(this,"Registro guardado correctamente!!");
            //refrescar la tabla
           cargarTabla(); 
           limpiar();
            
        }else
        {
            JOptionPane.showMessageDialog(this,"NO se ha guardado el registro");
        }
     }
        
        
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosMouseClicked
        // TODO add your handling code here:
        int fila = this.tablaDatos.getSelectedRow();
        this.txtCodigo.setText(tablaDatos.getValueAt(tablaDatos.getSelectedRow(),0).toString());
        this.txtNombres.setText(tablaDatos.getValueAt(tablaDatos.getSelectedRow(),1).toString());
        this.txtApellidos1.setText(tablaDatos.getValueAt(tablaDatos.getSelectedRow(),2).toString());
          /*if( String.valueOf(this.tablaDatos.getValueAt(fila, 3)).equals("F"))
        {     
             rbF.setSelected(true);  
        } else if( String.valueOf(this.tablaDatos.getValueAt(fila, 3)).equals("M")) {            
            rbM.setSelected(true);
             
          }
        //this.txtEdad.setText(tablaDatos.getValueAt(tablaDatos.getSelectedRow(),4).toString());*/
        //this.dateFecha.setDate(tablaDatos.getValueAt(tablaDatos.getSelectedRow(),3));
        this.cmbHora.setSelectedItem(String.valueOf(this.tablaDatos.getValueAt(fila, 4)));
       this.txtClinica.setText(tablaDatos.getValueAt(tablaDatos.getSelectedRow(),5).toString());
        
        
        
        Date fecNac= new java.sql.Date(dateFecha.getDate().getTime());
        
        
        
    }//GEN-LAST:event_tablaDatosMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        // TODO add your handling code here:
        
        if(txtNombres.getText().equals("")||txtApellidos1.getText().equals("")/*||txtEdad.getText().equals("")*/||txtClinica.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Hay campos incompletos");
        }else{   
        this.citas.setNombresPaciente(this.txtNombres.getText()); 
        this.citas.setApellidosPaciente(this.txtApellidos1.getText()); 
        
        /*char genero=0;
        if (this.rbF.isSelected())
        {
            genero='F';
        }else if (this.rbM.isSelected())
        {
            genero='M';
        }
        this.citas.setGenero(genero);
        this.citas.setEdad(Integer.parseInt(this.txtEdad.getText()));*/
        Date fecNac= new java.sql.Date(dateFecha.getDate().getTime());
        
        this.citas.setFechCita(fecNac);
        
        this.citas.setHoraCita(this.cmbHora.getSelectedItem().toString()); 
        this.citas.setIdClinica(new Clinicas(Integer.parseInt(this.txtClinica.getText())));
        this.citas.setCodigo(Integer.parseInt(this.txtCodigo.getText()));
        //this.citas.setIdClinica(Integer.parseInt(this.txtEdad.getText()));        
        //this.clinic.setIdClinica(this.cmbClinicas.getSelectedItem().toString();
        
       if (dao.modificar(this.citas)){
            JOptionPane.showMessageDialog(this,"Modificado correctamente!!");
            //refrescar la tabla
            cargarTabla(); 
            limpiar();
            
        }else
        {
            JOptionPane.showMessageDialog(this,"Ocurrio un error al modificar");
        }
        
        
       }
        
        
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        // TODO add your handling code here:
        if(txtNombres.getText().equals("")||txtApellidos1.getText().equals("")/*||txtEdad.getText().equals("")*/||txtClinica.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Hay campos incompletos");
        }else{   
        this.citas.setNombresPaciente(this.txtNombres.getText()); 
        this.citas.setApellidosPaciente(this.txtApellidos1.getText()); 
        
        /*char genero=0;
        if (this.rbF.isSelected())
        {
            genero='F';
        }else if (this.rbM.isSelected())
        {
            genero='M';
        }
        this.citas.setGenero(genero);
        this.citas.setEdad(Integer.parseInt(this.txtEdad.getText()));*/
        Date fecNac= new java.sql.Date(dateFecha.getDate().getTime());
        
        this.citas.setFechCita(fecNac);
        
        this.citas.setHoraCita(this.cmbHora.getSelectedItem().toString()); 
        this.citas.setIdClinica(new Clinicas(Integer.parseInt(this.txtClinica.getText())));
        this.citas.setCodigo(Integer.parseInt(this.txtCodigo.getText()));
        //this.citas.setIdClinica(Integer.parseInt(this.txtEdad.getText()));        
        //this.clinic.setIdClinica(this.cmbClinicas.getSelectedItem().toString();
        
       

        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar el registro?", "Advertencia!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        if (resp==JOptionPane.YES_OPTION)
            {
                 if (dao.eliminar(this.citas)){
                    JOptionPane.showMessageDialog(this,"El registro se ha eliminado exitosamente");
                    //refrescar la tabla
                   cargarTabla();             
        }else
        {
            JOptionPane.showMessageDialog(this,"Ha ocurrido un error al eliminar");
        }
                
                
            }
        }
    }//GEN-LAST:event_btnEliminarMouseClicked
private void txtEdadKeyTyped(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:

        char validar =evt.getKeyChar();

        if (Character.isLetter(validar))
        {
                getToolkit().beep();
                evt.consume();
          JOptionPane.showMessageDialog(this,"Solo numeros");

        }
        /*if (txtEdad.getText().length()== 3) 

         evt.consume(); */
    }
    private void txtClinicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClinicaKeyTyped
        // TODO add your handling code here:
         char validar =evt.getKeyChar();
        
        if (Character.isLetter(validar))
        {
                getToolkit().beep();
                evt.consume();
          JOptionPane.showMessageDialog(this,"Solo numeros");
                
        }
    }//GEN-LAST:event_txtClinicaKeyTyped

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Inicio.frmCitas=null;
    }//GEN-LAST:event_formWindowClosing

    private void txtClinicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClinicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClinicaActionPerformed

    private void txtApellidos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidos1ActionPerformed

    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresActionPerformed

    private void cmbHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHoraActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vistCitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbHora;
    private com.toedter.calendar.JDateChooser dateFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JTable tableClinicas;
    private javax.swing.JTextField txtApellidos1;
    private javax.swing.JTextField txtClinica;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
